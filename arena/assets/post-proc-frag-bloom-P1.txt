#version 120

// Post-processing fragment shader 1.1
// Bloom (First Pass)

uniform sampler2D FBOtex;
varying vec2 texCoords;

vec2 resolution = vec2(1280, 720);

float luma(vec3 color)
{
  return dot(color, vec3(0.299, 0.587, 0.114));
}

void main()
{
	vec2 tcoord = vec2(1.0f - texCoords.s, texCoords.t); // Flip the x axis.
	float bloom_radius = 6.14;

    vec2 uv = tcoord/resolution.xy;
    vec2 scalar = 1.0 / resolution.xy;

    vec3 col = texture2D(FBOtex, uv).rgb;
    
    vec3 left = texture2D(FBOtex, uv + vec2(-1.0, 0.0) * scalar * bloom_radius).rgb;
    vec3 right = texture2D(FBOtex, uv + vec2(1.0, 0.0) * scalar * bloom_radius).rgb;
    vec3 up = texture2D(FBOtex, uv + vec2(0.0, 1.0) * scalar * bloom_radius).rgb;
    vec3 down = texture2D(FBOtex, uv + vec2(0.0, -1.0) * scalar * bloom_radius).rgb;
    
    vec3 bloomed = max(left, max(right, max(up, max(down, col))));
    bloomed = (col + bloomed) / 2.0;
    bloomed = (col + (bloomed * luma(bloomed)));
    
    gl_FragColor = vec4(bloomed, 1.0);
}
